definitions:
  dtos.ErrorDto:
    properties:
      error_message:
        type: string
    type: object
  dtos.GenerateTokenRequest:
    properties:
      user_id:
        type: string
    type: object
  dtos.GenerateTokenResponse:
    properties:
      token:
        type: string
    type: object
  dtos.RegisterRequest:
    properties:
      phone_number:
        type: string
      role:
        type: string
    type: object
info:
  contact: {}
  description: Service for handling auth, tokens and that stuff
  title: AuthService API
  version: "1.0"
paths:
  /api/v1/auth/generate-token:
    post:
      consumes:
      - application/json
      description: Generates a new JWT (or other) token for user authentication
      parameters:
      - description: Token generation parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.GenerateTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated token
          schema:
            $ref: '#/definitions/dtos.GenerateTokenResponse'
        "400":
          description: Invalid UserId format (must be UUID)
          schema:
            $ref: '#/definitions/dtos.ErrorDto'
        "500":
          description: Happened internal error
          schema:
            $ref: '#/definitions/dtos.ErrorDto'
      summary: Generate a new authentication token
      tags:
      - Authentication
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created user in db
        "400":
          description: Invalid role
          schema:
            $ref: '#/definitions/dtos.ErrorDto'
        "500":
          description: Happened internal error
          schema:
            $ref: '#/definitions/dtos.ErrorDto'
      summary: Create user entity in database, making him ready to log in
      tags:
      - Authentication
securityDefinitions:
  JwtBearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
