version: '3.8'

services:
  auth_service:
    build: .
    ports: ["8081:8081"]
    environment:
      PORT: "8081"
      SECRET_KEY: "your_production_secret_key"
      IS_DEVELOPMENT: "false"
      DATABASE_HOST: "postgres:5432"
      DATABASE_DB_NAME: "auth_service_db"
      DATABASE_USER: "postgres"
      DATABASE_PASSWORD: "postgres"
      KAFKA_URL: "kafka:29092"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started

  postgres:
    image: postgres:latest
    container_name: postgres 
    restart: always
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "auth_service_db"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
    depends_on:
      - zookeeper

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8090:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: "kafka_cluster_0_name"
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka:29092"
    depends_on:
      - kafka
      
volumes:
  postgres_data:
    driver: local